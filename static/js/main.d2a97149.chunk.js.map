{"version":3,"sources":["Components/Header.jsx","Components/Model.jsx","Components/TodoSetup.jsx","Components/TodoCard.jsx","App.js","useLocalStorage.js","index.js"],"names":["Header","className","Model","Component","closeModel","id","onClick","TodoSetup","isEdit","title","body","saveEditted","useContext","DATABASE","setDB","useState","titlestate","setTitleState","bodystate","setBodyState","onSubmit","e","preventDefault","heading","target","value","time","Date","getTime","prev","autoComplete","onChange","required","name","type","placeholder","TodoCard","deleteTODO","editTodo","toDateString","size","createContext","App","modelcomponent","setModelComponent","JSON","parse","localStorage","getItem","db","useEffect","setItem","stringify","useLocalStrorage","pre","filter","ele","index","findIndex","Provider","sort","a","b","map","fill","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2a97149.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className='header-container'>\r\n            <p className='title'>zumba</p>\r\n            <span className='title-tag'>ToDo'</span>\r\n            <p className=\"title-last-letter\">s</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { ImCross } from 'react-icons/im';\r\n\r\nexport default function Model({ Component,closeModel }) {\r\n    return (\r\n        <div id=\"model-backdrop\">\r\n            <div id=\"model-screen\" >\r\n                <ImCross onClick={closeModel} id=\"close-menu\" />\r\n                {Component}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React,{ useContext, useState } from 'react';\r\nimport {DATABASE} from '../App'\r\n\r\nexport default function TodoSetup({closeModel,isEdit,title,body,saveEditted}) {\r\n    const [_,setDB] = useContext(DATABASE);\r\n    const [titlestate,setTitleState] = useState(isEdit ? title : '')\r\n    const [bodystate,setBodyState] = useState(isEdit ? body : '')\r\n\r\n\r\n    const addTODO = (e) => {\r\n        e.preventDefault();\r\n        const heading = e.target['add-title'].value;\r\n        const body = e.target['add-text'].value;\r\n        const time = new Date().getTime();\r\n        setDB(prev => [{\r\n            heading,body,time\r\n        },...prev])\r\n        closeModel();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={isEdit ? saveEditted : addTODO} className='todosetup-container'>\r\n            <h2 className='todosetup-title'>Add your text</h2>\r\n            <input autoComplete='off' onChange={e => setTitleState(e.target.value)} className='add-title' required value={titlestate} name='add-title' type=\"text\" placeholder='Title here' />\r\n            <textarea onChange={e => setBodyState(e.target.value)}  className='add-text' required value={bodystate} name='add-text' placeholder='Add Text here..'  />\r\n            <button type='submit'>Save</button>\r\n        </form>\r\n    )\r\n}","import React from 'react';\r\nimport { MdEdit,IoMdTrash } from 'react-icons/all'\r\n\r\nexport default function TodoCard({time,title,body,deleteTODO,editTodo}) {\r\n    return (\r\n        <div className=\"todo-card\">\r\n            <h3>{title}</h3>\r\n            <p>{body}</p>\r\n            {/* title */}\r\n            {/* body */}\r\n            <div className=\"todo-bottom\" >\r\n            <p>{new Date(time).toDateString()}</p>\r\n            <div className=\"options-container\">\r\n                <MdEdit onClick={() => editTodo(time)} className='todo-edit' size=\"25\" />\r\n                <IoMdTrash onClick={() => deleteTODO(time)} className='todo-del' size=\"25\" />\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React, { useState, createContext } from 'react';\nimport Header from './Components/Header';\nimport Model from './Components/Model'\nimport { AiFillPlusCircle } from 'react-icons/ai'\nimport TodoSetup from './Components/TodoSetup';\nimport TodoCard from './Components/TodoCard';\nimport useLocalStrorage from './useLocalStorage';\n\n\nexport const DATABASE = createContext();\n\nfunction App() {\n  const [modelcomponent, setModelComponent] = useState(null);\n  const [db, setDB] = useLocalStrorage();\n\n  const closeModel = () => setModelComponent(null);\n  const deleteTODO = time => setDB(pre => [...pre.filter(ele => ele.time !== time)]);\n  const editTodo = (time) => {\n    const index = db.findIndex(ele => ele.time === time)\n    if(index === -1) return;\n    const saveEditted = (e) => {\n      e.preventDefault();\n      setDB(pre => {\n        pre[index].heading = e.target['add-title'].value;\n        pre[index].body = e.target['add-text'].value;\n        pre[index].time = new Date().getTime();\n        return [...pre]\n      });\n      closeModel();\n    };\n\n    setModelComponent(() => <TodoSetup isEdit={true} title={db[index].heading} body={db[index].body} saveEditted={saveEditted} />)\n  }\n\n  return (\n    <DATABASE.Provider value={[db, setDB]}>\n      <div className=\"App\">\n        <Header />\n        <div id=\"todo-container\">\n          {/* List of TODO ITEMS */}\n          {db.sort((a,b) => b.time - a.time).map(ele => <TodoCard key={ele.time} deleteTODO={deleteTODO} time={ele.time} title={ele.heading} body={ele.body} editTodo={editTodo} />)}\n        </div>\n        <AiFillPlusCircle  onClick={() => setModelComponent(() => <TodoSetup closeModel={closeModel} />)} fill=\"#1962D1\" className=\"addtodo\" />\n        {modelcomponent && <Model Component={modelcomponent} closeModel={closeModel} />}\n      </div>\n    </DATABASE.Provider>\n  );\n}\n\nexport default App;","import { useState,useEffect } from 'react';\r\n\r\nexport default function useLocalStorage() {\r\n    const [db,setDB] = useState(() => JSON.parse(localStorage.getItem('todo-app-data') || '[]'));\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todo-app-data',JSON.stringify(db));\r\n    },[db]);\r\n\r\n    return [db,setDB];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}